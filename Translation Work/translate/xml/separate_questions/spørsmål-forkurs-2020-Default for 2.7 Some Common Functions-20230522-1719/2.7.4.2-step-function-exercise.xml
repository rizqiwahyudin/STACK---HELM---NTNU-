<?xml version="1.0" encoding="UTF-8"?>
<quiz>
<question type="stack">
        <name>
            <text>2.7.4.2 Step function exercise</text>
        </name>
        <questiontext format="html">
            <text><![CDATA[
<p class="HELM_exercise">
    <span class="multilang" lang="en">
        Exercise
    </span>
    <span class="multilang" lang="no">
        &#216;ving
    </span>
</p>
<p>
    <span class="multilang" lang="en">
        Write down in the boxes the expression of the step function corresponding to the graph below (call the step function \(u\) and use the independent variable \(t\)).
    </span>
    <span class="multilang" lang="no">
        Skriv ned i boksene uttrykket for enhetssprangfunksjonen som tilsvarer grafen nedenfor (kall funksjonen \(u\) og bruk den uavhengige variabelen \(t\)).
    </span>
</p>
<ol class="HELM_parts">
    <li>
        <p>
            [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]
        </p>
        <figure class="HELM_figure">
            <img alt="" class="img-responsive atto_image_button_text-bottom" height="353" role="presentation" src="@@PLUGINFILE@@/step1.svg" width="250"/>
        </figure>
    </li>
    <li>
        <p>
            [[input:ans2]] [[validation:ans2]] [[feedback:prt2]]
        </p>
        <figure class="HELM_figure">
            <img alt="" class="atto_image_button_text-bottom" height="339" role="presentation" src="@@PLUGINFILE@@/step2.svg" width="240 "/>
        </figure>
    </li>
    <li>
        <p>
            [[input:ans3]] [[validation:ans3]] [[feedback:prt3]]
        </p>
        <figure class="HELM_figure">
            <img alt="" class="img-responsive atto_image_button_text-bottom" height="339" role="presentation" src="@@PLUGINFILE@@/step3.svg" width="240"/>
        </figure>
    </li>
    <li>
        <p>
            [[input:ans4]] [[validation:ans4]] [[feedback:prt4]]
        </p>
        <figure class="HELM_figure">
            <img alt="" class="img-responsive atto_image_button_middle" height="339" role="presentation" src="@@PLUGINFILE@@/step4.svg" width="240"/>
        </figure>
    </li>
    <li>
        <p>
            [[input:ans5]] [[validation:ans5]] [[feedback:prt5]]
        </p>
        <figure class="HELM_figure">
            <img alt="" class="img-responsive atto_image_button_text-bottom" height="339" role="presentation" src="@@PLUGINFILE@@/step5.svg" width="240"/>
        </figure>
    </li>
    <li>
        <p>
            [[input:ans6]] [[validation:ans6]] [[feedback:prt6]]
        </p>
        <figure class="HELM_figure">
            <img alt="" class="img-responsive atto_image_button_text-bottom" height="339" role="presentation" src="@@PLUGINFILE@@/step6.svg" width="240"/>
        </figure>
    </li>
    <li>
        <p>
            [[input:ans7]] [[validation:ans7]] [[feedback:prt7]]
        </p>
        <figure class="HELM_figure">
            <img alt="" class="img-responsive atto_image_button_text-bottom" height="339" role="presentation" src="@@PLUGINFILE@@/step7.svg" width="240"/>
        </figure>
    </li>
</ol>
]]></text>
            <file name="step1.svg" path="/" encoding="base64"></file>
            <file name="step2.svg" path="/" encoding="base64"></file>
            <file name="step3.svg" path="/" encoding="base64"></file>
            <file name="step4.svg" path="/" encoding="base64"></file>
            <file name="step5.svg" path="/" encoding="base64"></file>
            <file name="step6.svg" path="/" encoding="base64"></file>
            <file name="step7.svg" path="/" encoding="base64"></file>
        </questiontext>
        <generalfeedback format="html">
            <text><![CDATA[
<p>
    <span class="multilang" lang="en">
        A step function is a function whose graph looks like a series of steps because it consists of a series of horizontal line segments with jumps in-between. For this reason, it is also sometimes called a staircase function. A step function has a constant value on given intervals, but the constant is different for each interval. Given the step function \(u(t)\), this is equal to \(1\) for \(t \geq 0\), \(0\) otherwise. This is very clear in the first graph. Consider now the graph of the step function in point c); in this case, the function is equal to \(1\) for \(t \geq 1\), hence the step function can be written as \(u(t-1)\) (we can easily see that the argument of \(u\) is zero for \(t=1\)). The same arguments apply to the other graphs.
    </span>
    <span class="multilang" lang="no">
        En trinnfunksjon er en funksjon hvis graf ser ut som en serie av trinn fordi den best&#229;r av en serie horisontale linjestykker med hopp i mellom. Av denne grunn kalles det ogs&#229; noen ganger en trappefunksjon. En trinnfunksjon har en konstant verdi p&#229; gitte intervaller, men konstanten er forskjellig for hvert intervall. Gitt trinnfunksjonen \(u(t)\), er dette lik \(1\) for \(t \geq 0\), \(0\) ellers. Dette er veldig tydelig i den f&#248;rste grafen. Betrakt n&#229; grafen til trinnfunksjonen i punkt c); i dette tilfellet er funksjonen lik \(1\) for \(t \geq 1\), derav kan trinnfunksjonen skrives som \(u(t-1)\) (vi kan lett se at argumentet av \(u\) er null for \(t=1\)). De samme argumentene gjelder for de andre grafene.
    </span>
</p>
]]></text>
        </generalfeedback>
        <defaultgrade>1.0000000</defaultgrade>
        <penalty>0.1000000</penalty>
        <hidden>0</hidden>
        <idnumber/>
        <stackversion>
            <text>2020120600</text>
        </stackversion>
        <questionvariables>
            <text>/*ta1: u(t);*/
/*ta2: -u(t);*/
/*ta3: u(t&#8722;1);*/
/*ta4: u(t+1);*/
/*ta5: u(t&#8722;3)&#8722;u(t&#8722;2);*/
/*ta6: 3*u(t);*/
/*ta7: &#8722;2*u(t&#8722;3);*/

ta1:u(t);
ta2: -u(t);
ta3: u(t-1);
ta4: u(t+1);
ta5: u(t-3)-u(t-2);
ta6:3*u(t);
ta7:-2*u(t-3);</text>
        </questionvariables>
        <specificfeedback format="html">
            <text/>
        </specificfeedback>
        <questionnote>
            <text/>
        </questionnote>
        <questionsimplify>1</questionsimplify>
        <assumepositive>0</assumepositive>
        <assumereal>0</assumereal>
        <prtcorrect format="html">
            <text><![CDATA[
<span style="font-size: 1.5em; color:green;">
    <i class="fa fa-check">
    </i>
</span>
Correct answer, well done.
]]></text>
        </prtcorrect>
        <prtpartiallycorrect format="html">
            <text><![CDATA[
<span style="font-size: 1.5em; color:orange;">
    <i class="fa fa-adjust">
    </i>
</span>
Your answer is partially correct.
]]></text>
        </prtpartiallycorrect>
        <prtincorrect format="html">
            <text><![CDATA[
<span style="font-size: 1.5em; color:red;">
    <i class="fa fa-times">
    </i>
</span>
Incorrect answer.
]]></text>
        </prtincorrect>
        <multiplicationsign>dot</multiplicationsign>
        <sqrtsign>1</sqrtsign>
        <complexno>i</complexno>
        <inversetrig>cos-1</inversetrig>
        <logicsymbol>lang</logicsymbol>
        <matrixparens>[</matrixparens>
        <variantsselectionseed/>
        <input>
            <name>ans1</name>
            <type>algebraic</type>
            <tans>ta1</tans>
            <boxsize>10</boxsize>
            <strictsyntax>1</strictsyntax>
            <insertstars>0</insertstars>
            <syntaxhint/>
            <syntaxattribute>0</syntaxattribute>
            <forbidwords/>
            <allowwords/>
            <forbidfloat>1</forbidfloat>
            <requirelowestterms>0</requirelowestterms>
            <checkanswertype>0</checkanswertype>
            <mustverify>0</mustverify>
            <showvalidation>0</showvalidation>
            <options/>
        </input>
        <input>
            <name>ans2</name>
            <type>algebraic</type>
            <tans>ta2</tans>
            <boxsize>10</boxsize>
            <strictsyntax>1</strictsyntax>
            <insertstars>0</insertstars>
            <syntaxhint/>
            <syntaxattribute>0</syntaxattribute>
            <forbidwords/>
            <allowwords/>
            <forbidfloat>1</forbidfloat>
            <requirelowestterms>0</requirelowestterms>
            <checkanswertype>0</checkanswertype>
            <mustverify>0</mustverify>
            <showvalidation>0</showvalidation>
            <options/>
        </input>
        <input>
            <name>ans3</name>
            <type>algebraic</type>
            <tans>ta3</tans>
            <boxsize>10</boxsize>
            <strictsyntax>1</strictsyntax>
            <insertstars>0</insertstars>
            <syntaxhint/>
            <syntaxattribute>0</syntaxattribute>
            <forbidwords/>
            <allowwords/>
            <forbidfloat>1</forbidfloat>
            <requirelowestterms>0</requirelowestterms>
            <checkanswertype>0</checkanswertype>
            <mustverify>0</mustverify>
            <showvalidation>0</showvalidation>
            <options/>
        </input>
        <input>
            <name>ans4</name>
            <type>algebraic</type>
            <tans>ta4</tans>
            <boxsize>10</boxsize>
            <strictsyntax>1</strictsyntax>
            <insertstars>0</insertstars>
            <syntaxhint/>
            <syntaxattribute>0</syntaxattribute>
            <forbidwords/>
            <allowwords/>
            <forbidfloat>1</forbidfloat>
            <requirelowestterms>0</requirelowestterms>
            <checkanswertype>0</checkanswertype>
            <mustverify>0</mustverify>
            <showvalidation>0</showvalidation>
            <options/>
        </input>
        <input>
            <name>ans5</name>
            <type>algebraic</type>
            <tans>ta5</tans>
            <boxsize>10</boxsize>
            <strictsyntax>1</strictsyntax>
            <insertstars>0</insertstars>
            <syntaxhint/>
            <syntaxattribute>0</syntaxattribute>
            <forbidwords/>
            <allowwords/>
            <forbidfloat>1</forbidfloat>
            <requirelowestterms>0</requirelowestterms>
            <checkanswertype>0</checkanswertype>
            <mustverify>0</mustverify>
            <showvalidation>0</showvalidation>
            <options/>
        </input>
        <input>
            <name>ans6</name>
            <type>algebraic</type>
            <tans>ta6</tans>
            <boxsize>10</boxsize>
            <strictsyntax>1</strictsyntax>
            <insertstars>0</insertstars>
            <syntaxhint/>
            <syntaxattribute>0</syntaxattribute>
            <forbidwords/>
            <allowwords/>
            <forbidfloat>1</forbidfloat>
            <requirelowestterms>0</requirelowestterms>
            <checkanswertype>0</checkanswertype>
            <mustverify>0</mustverify>
            <showvalidation>0</showvalidation>
            <options/>
        </input>
        <input>
            <name>ans7</name>
            <type>algebraic</type>
            <tans>ta7</tans>
            <boxsize>10</boxsize>
            <strictsyntax>1</strictsyntax>
            <insertstars>0</insertstars>
            <syntaxhint/>
            <syntaxattribute>0</syntaxattribute>
            <forbidwords/>
            <allowwords/>
            <forbidfloat>1</forbidfloat>
            <requirelowestterms>0</requirelowestterms>
            <checkanswertype>0</checkanswertype>
            <mustverify>0</mustverify>
            <showvalidation>0</showvalidation>
            <options/>
        </input>
        <prt>
            <name>prt1</name>
            <value>1.0000000</value>
            <autosimplify>1</autosimplify>
            <feedbackstyle>1</feedbackstyle>
            <feedbackvariables>
                <text/>
            </feedbackvariables>
            <node>
                <name>0</name>
                <answertest>AlgEquiv</answertest>
                <sans>ans1</sans>
                <tans>ta1</tans>
                <testoptions/>
                <quiet>0</quiet>
                <truescoremode>=</truescoremode>
                <truescore>1.0000000</truescore>
                <truepenalty/>
                <truenextnode>-1</truenextnode>
                <trueanswernote>prt1-1-T</trueanswernote>
                <truefeedback format="html">
                    <text/>
                </truefeedback>
                <falsescoremode>=</falsescoremode>
                <falsescore>0.0000000</falsescore>
                <falsepenalty/>
                <falsenextnode>-1</falsenextnode>
                <falseanswernote>prt1-1-F</falseanswernote>
                <falsefeedback format="html">
                    <text/>
                </falsefeedback>
            </node>
        </prt>
        <prt>
            <name>prt2</name>
            <value>1.0000000</value>
            <autosimplify>1</autosimplify>
            <feedbackstyle>1</feedbackstyle>
            <feedbackvariables>
                <text/>
            </feedbackvariables>
            <node>
                <name>0</name>
                <answertest>AlgEquiv</answertest>
                <sans>ans2</sans>
                <tans>ta2</tans>
                <testoptions/>
                <quiet>0</quiet>
                <truescoremode>=</truescoremode>
                <truescore>1.0000000</truescore>
                <truepenalty/>
                <truenextnode>-1</truenextnode>
                <trueanswernote>prt2-1-T</trueanswernote>
                <truefeedback format="html">
                    <text/>
                </truefeedback>
                <falsescoremode>=</falsescoremode>
                <falsescore>0.0000000</falsescore>
                <falsepenalty/>
                <falsenextnode>-1</falsenextnode>
                <falseanswernote>prt2-1-F</falseanswernote>
                <falsefeedback format="html">
                    <text/>
                </falsefeedback>
            </node>
        </prt>
        <prt>
            <name>prt3</name>
            <value>1.0000000</value>
            <autosimplify>1</autosimplify>
            <feedbackstyle>1</feedbackstyle>
            <feedbackvariables>
                <text/>
            </feedbackvariables>
            <node>
                <name>0</name>
                <answertest>AlgEquiv</answertest>
                <sans>ans3</sans>
                <tans>ta3</tans>
                <testoptions/>
                <quiet>0</quiet>
                <truescoremode>=</truescoremode>
                <truescore>1.0000000</truescore>
                <truepenalty/>
                <truenextnode>-1</truenextnode>
                <trueanswernote>prt3-1-T</trueanswernote>
                <truefeedback format="html">
                    <text/>
                </truefeedback>
                <falsescoremode>=</falsescoremode>
                <falsescore>0.0000000</falsescore>
                <falsepenalty/>
                <falsenextnode>-1</falsenextnode>
                <falseanswernote>prt3-1-F</falseanswernote>
                <falsefeedback format="html">
                    <text/>
                </falsefeedback>
            </node>
        </prt>
        <prt>
            <name>prt4</name>
            <value>1.0000000</value>
            <autosimplify>1</autosimplify>
            <feedbackstyle>1</feedbackstyle>
            <feedbackvariables>
                <text/>
            </feedbackvariables>
            <node>
                <name>0</name>
                <answertest>AlgEquiv</answertest>
                <sans>ans4</sans>
                <tans>ta4</tans>
                <testoptions/>
                <quiet>0</quiet>
                <truescoremode>=</truescoremode>
                <truescore>1.0000000</truescore>
                <truepenalty/>
                <truenextnode>-1</truenextnode>
                <trueanswernote>prt4-1-T</trueanswernote>
                <truefeedback format="html">
                    <text/>
                </truefeedback>
                <falsescoremode>=</falsescoremode>
                <falsescore>0.0000000</falsescore>
                <falsepenalty/>
                <falsenextnode>-1</falsenextnode>
                <falseanswernote>prt4-1-F</falseanswernote>
                <falsefeedback format="html">
                    <text/>
                </falsefeedback>
            </node>
        </prt>
        <prt>
            <name>prt5</name>
            <value>1.0000000</value>
            <autosimplify>1</autosimplify>
            <feedbackstyle>1</feedbackstyle>
            <feedbackvariables>
                <text/>
            </feedbackvariables>
            <node>
                <name>0</name>
                <answertest>AlgEquiv</answertest>
                <sans>ans5</sans>
                <tans>ta5</tans>
                <testoptions/>
                <quiet>0</quiet>
                <truescoremode>=</truescoremode>
                <truescore>1.0000000</truescore>
                <truepenalty/>
                <truenextnode>-1</truenextnode>
                <trueanswernote>prt5-1-T</trueanswernote>
                <truefeedback format="html">
                    <text/>
                </truefeedback>
                <falsescoremode>=</falsescoremode>
                <falsescore>0.0000000</falsescore>
                <falsepenalty/>
                <falsenextnode>-1</falsenextnode>
                <falseanswernote>prt5-1-F</falseanswernote>
                <falsefeedback format="html">
                    <text/>
                </falsefeedback>
            </node>
        </prt>
        <prt>
            <name>prt6</name>
            <value>1.0000000</value>
            <autosimplify>1</autosimplify>
            <feedbackstyle>1</feedbackstyle>
            <feedbackvariables>
                <text/>
            </feedbackvariables>
            <node>
                <name>0</name>
                <answertest>AlgEquiv</answertest>
                <sans>ans6</sans>
                <tans>ta6</tans>
                <testoptions/>
                <quiet>0</quiet>
                <truescoremode>=</truescoremode>
                <truescore>1.0000000</truescore>
                <truepenalty/>
                <truenextnode>-1</truenextnode>
                <trueanswernote>prt6-1-T</trueanswernote>
                <truefeedback format="html">
                    <text/>
                </truefeedback>
                <falsescoremode>=</falsescoremode>
                <falsescore>0.0000000</falsescore>
                <falsepenalty/>
                <falsenextnode>-1</falsenextnode>
                <falseanswernote>prt6-1-F</falseanswernote>
                <falsefeedback format="html">
                    <text/>
                </falsefeedback>
            </node>
        </prt>
        <prt>
            <name>prt7</name>
            <value>1.0000000</value>
            <autosimplify>1</autosimplify>
            <feedbackstyle>1</feedbackstyle>
            <feedbackvariables>
                <text/>
            </feedbackvariables>
            <node>
                <name>0</name>
                <answertest>AlgEquiv</answertest>
                <sans>ans7</sans>
                <tans>ta7</tans>
                <testoptions/>
                <quiet>0</quiet>
                <truescoremode>=</truescoremode>
                <truescore>1.0000000</truescore>
                <truepenalty/>
                <truenextnode>-1</truenextnode>
                <trueanswernote>prt7-1-T</trueanswernote>
                <truefeedback format="html">
                    <text/>
                </truefeedback>
                <falsescoremode>=</falsescoremode>
                <falsescore>0.0000000</falsescore>
                <falsepenalty/>
                <falsenextnode>-1</falsenextnode>
                <falseanswernote>prt7-1-F</falseanswernote>
                <falsefeedback format="html">
                    <text/>
                </falsefeedback>
            </node>
        </prt>
        <qtest>
            <testcase>1</testcase>
            <testinput>
                <name>ans1</name>
                <value>ta1</value>
            </testinput>
            <testinput>
                <name>ans2</name>
                <value>ta2</value>
            </testinput>
            <testinput>
                <name>ans3</name>
                <value>ta3</value>
            </testinput>
            <testinput>
                <name>ans4</name>
                <value>ta4</value>
            </testinput>
            <testinput>
                <name>ans5</name>
                <value>ta5</value>
            </testinput>
            <testinput>
                <name>ans6</name>
                <value>ta6</value>
            </testinput>
            <testinput>
                <name>ans7</name>
                <value>ta7</value>
            </testinput>
            <expected>
                <name>prt1</name>
                <expectedscore>1.0000000</expectedscore>
                <expectedpenalty>0.0000000</expectedpenalty>
                <expectedanswernote>prt1-1-T</expectedanswernote>
            </expected>
            <expected>
                <name>prt2</name>
                <expectedscore>1.0000000</expectedscore>
                <expectedpenalty>0.0000000</expectedpenalty>
                <expectedanswernote>prt2-1-T</expectedanswernote>
            </expected>
            <expected>
                <name>prt3</name>
                <expectedscore>1.0000000</expectedscore>
                <expectedpenalty>0.0000000</expectedpenalty>
                <expectedanswernote>prt3-1-T</expectedanswernote>
            </expected>
            <expected>
                <name>prt4</name>
                <expectedscore>1.0000000</expectedscore>
                <expectedpenalty>0.0000000</expectedpenalty>
                <expectedanswernote>prt4-1-T</expectedanswernote>
            </expected>
            <expected>
                <name>prt5</name>
                <expectedscore>1.0000000</expectedscore>
                <expectedpenalty>0.0000000</expectedpenalty>
                <expectedanswernote>prt5-1-T</expectedanswernote>
            </expected>
            <expected>
                <name>prt6</name>
                <expectedscore>1.0000000</expectedscore>
                <expectedpenalty>0.0000000</expectedpenalty>
                <expectedanswernote>prt6-1-T</expectedanswernote>
            </expected>
            <expected>
                <name>prt7</name>
                <expectedscore>1.0000000</expectedscore>
                <expectedpenalty>0.0000000</expectedpenalty>
                <expectedanswernote>prt7-1-T</expectedanswernote>
            </expected>
        </qtest>
        <qtest>
            <testcase>2</testcase>
            <testinput>
                <name>ans1</name>
                <value>ev(ta1+2,simp)</value>
            </testinput>
            <testinput>
                <name>ans2</name>
                <value>ev(ta2+2,simp)</value>
            </testinput>
            <testinput>
                <name>ans3</name>
                <value>ev(ta3+2,simp)</value>
            </testinput>
            <testinput>
                <name>ans4</name>
                <value>ev(ta4+2,simp)</value>
            </testinput>
            <testinput>
                <name>ans5</name>
                <value>ev(ta5+2,simp)</value>
            </testinput>
            <testinput>
                <name>ans6</name>
                <value>ev(ta6+2,simp)</value>
            </testinput>
            <testinput>
                <name>ans7</name>
                <value>ev(ta7+2,simp)</value>
            </testinput>
            <expected>
                <name>prt1</name>
                <expectedscore>0.0000000</expectedscore>
                <expectedpenalty>0.1000000</expectedpenalty>
                <expectedanswernote>prt1-1-F</expectedanswernote>
            </expected>
            <expected>
                <name>prt2</name>
                <expectedscore>0.0000000</expectedscore>
                <expectedpenalty>0.1000000</expectedpenalty>
                <expectedanswernote>prt2-1-F</expectedanswernote>
            </expected>
            <expected>
                <name>prt3</name>
                <expectedscore>0.0000000</expectedscore>
                <expectedpenalty>0.1000000</expectedpenalty>
                <expectedanswernote>prt3-1-F</expectedanswernote>
            </expected>
            <expected>
                <name>prt4</name>
                <expectedscore>0.0000000</expectedscore>
                <expectedpenalty>0.1000000</expectedpenalty>
                <expectedanswernote>prt4-1-F</expectedanswernote>
            </expected>
            <expected>
                <name>prt5</name>
                <expectedscore>0.0000000</expectedscore>
                <expectedpenalty>0.1000000</expectedpenalty>
                <expectedanswernote>prt5-1-F</expectedanswernote>
            </expected>
            <expected>
                <name>prt6</name>
                <expectedscore>0.0000000</expectedscore>
                <expectedpenalty>0.1000000</expectedpenalty>
                <expectedanswernote>prt6-1-F</expectedanswernote>
            </expected>
            <expected>
                <name>prt7</name>
                <expectedscore>0.0000000</expectedscore>
                <expectedpenalty>0.1000000</expectedpenalty>
                <expectedanswernote>prt7-1-F</expectedanswernote>
            </expected>
        </qtest>
    </question>


</quiz>